;#include <stdio.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdlib.h>
;#include <mega32.h>
;#include <string.h>
;#include <delay.h>
;
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// Declare your global variables here
;char txt[32];
;const int address_eeprom = 0x5f;
;const int pass_lenght = 14;
;// Timer 0 overflow interrupt service routine
;
;
;// Voltage Reference: AREF pin
;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 0017 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0018 ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $0000000F VOL: 0
;	adc_input -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0019 // Delay needed for the stabilization of the ADC input voltage
; 0000 001A delay_us(10);
;PCODE: $00000013 VOL: 0
; 0000 001B // Start the AD conversion
; 0000 001C ADCSRA|=(1<<ADSC);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 001D // Wait for the AD conversion to complete
; 0000 001E while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001F ADCSRA|=(1<<ADIF);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0020 return ADCW;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0021 }
;PCODE: $00000021 VOL: 0
;void write_eeprom(int address , char data){
; 0000 0022 void write_eeprom(int address , char data){
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0023       while(EECR & (1<<EEWE));
;PCODE: $00000024 VOL: 0
;	address -> Y+1
;	data -> Y+0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0024       EEAR = address ;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0025       EEDR = data;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0026       EECR |= (1<<EEMWE);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0027       EECR |= (1<<EEWE);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0028 }
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;void write_array_eeprom(char wri[],int size){
; 0000 0029 void write_array_eeprom(char wri[],int size){
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 002A       int i = 0;
; 0000 002B       for( ; i < size ;i++){
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;	wri -> Y+4
;	size -> Y+2
;	i -> R16,R17
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 002C             write_eeprom(address_eeprom+i,wri[i]);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 002D       }
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 002E }
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;char read_char_eeprom(int address){
; 0000 002F char read_char_eeprom(int address){
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0030       while(EECR & (1<<EEWE));
;PCODE: $0000005A VOL: 0
;	address -> Y+0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0031       EECR |= (1<<EERE);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0032       return EEDR;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0033 }
;PCODE: $00000066 VOL: 0
;void read_array_eeprom(char result[]){
; 0000 0034 void read_array_eeprom(char result[]){
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0035       int i = 0;
; 0000 0036       result[pass_lenght] = read_char_eeprom(address_eeprom);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;	result -> Y+2
;	i -> R16,R17
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0037       for(; i < pass_lenght ; i++){
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0038             result[i] = read_char_eeprom(address_eeprom+i);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 0039       }
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 003A }
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;int size_of_pass(char pass[]){
; 0000 003B int size_of_pass(char pass[]){
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 003C       int i =0;
; 0000 003D       for( ; i<14;i++){
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;	pass -> Y+2
;	i -> R16,R17
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 003E             if(pass[i]=='f'){
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 003F                   return i+1 ;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0040             }
; 0000 0041       }
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0042 }
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;unsigned char keypad(){
; 0000 0043 unsigned char keypad(){
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 0044       PORTC = 0b11101110;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0045       if((PINC &(1<<3))==0){
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0046             return '1';
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 0047             delay_ms(125);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 0048       }
; 0000 0049       else if((PINC &(1<<2))==0){
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 004A             return '2';
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 004B             delay_ms(125);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 004C       }
; 0000 004D       else if((PINC &(1<<1))==0){
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 004E             return '3';
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 004F             delay_ms(125);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 0050       }
; 0000 0051       PORTC = 0b11011110;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 0052       if((PINC &(1<<3))==0){
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 0053             return '4';
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0054             delay_ms(125);
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0055       }
; 0000 0056       else if((PINC &(1<<2))==0){
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 0057             return '5';
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 0058             delay_ms(125);
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 0059       }
; 0000 005A       else if((PINC &(1<<1))==0){
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 005B             return '6';
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 005C             delay_ms(125);
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 005D       }
; 0000 005E       PORTC = 0b10111110;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 005F       if((PINC &(1<<3))==0){
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 0060             return '7';
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0000 0061             delay_ms(125);
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 0062       }
; 0000 0063       else if((PINC &(1<<2))==0){
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 0064             return '8';
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 0065             delay_ms(125);
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 0066       }
; 0000 0067       else if((PINC &(1<<1))==0){
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 0068             return '9';
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 0069             delay_ms(125);
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
; 0000 006A       }
; 0000 006B       PORTC = 0b01111110;
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 006C       if((PINC &(1<<3))==0){
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 006D             return '*';
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 006E             delay_ms(125);
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 006F       }
; 0000 0070       else if((PINC &(1<<2))==0){
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 0071             return '0';
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 0072             delay_ms(125);
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 0073       }
; 0000 0074       else if((PINC &(1<<1))==0){
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 0075             return '#';
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 0076             delay_ms(125);
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 0077       }
; 0000 0078 }
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;void PwmLed_init(){
; 0000 0079 void PwmLed_init(){
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0000 007A       TCCR2=(1<<WGM20) | (1<<COM21) | (1<<WGM21) | (1<<CS20);
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0000 007B       DDRD |= (1<<DDD7);
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 007C }
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;void PwmLed_init_rev(){
; 0000 007D void PwmLed_init_rev(){
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 007E       TCCR2=(0<<WGM20) | (0<<COM21) | (0<<WGM21) | (0<<CS20);
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 007F }
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;void PwmFAN_init(){
; 0000 0080 void PwmFAN_init(){
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 0081       TCCR0=(1<<WGM00) | (1<<COM01) | (1<<WGM01) | (1<<CS00) | (1<<CS01);
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 0082       DDRB |= (1<<DDB3);
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 0083 }
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;void PwmFAN_init_rev(){
; 0000 0084 void PwmFAN_init_rev(){
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
; 0000 0085       TCCR0=(0<<WGM00) | (0<<COM01) | (0<<WGM01) | (0<<CS00) | (0<<CS01);
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 0086 }
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;int LCD_LED_LEVEL(int LedOn,int LAYER_OF_LCD,int PotentiometerInput){
; 0000 0087 int LCD_LED_LEVEL(int LedOn,int LAYER_OF_LCD,int PotentiometerInput){
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 0088       if(PINA.4){LAYER_OF_LCD = 0;}
;PCODE: $0000015D VOL: 0
;	LedOn -> Y+4
;	LAYER_OF_LCD -> Y+2
;	PotentiometerInput -> Y+0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 0089       if(LedOn){
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 008A                   sprintf(txt,"LED light  %2d                 ",PotentiometerInput);
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 008B             }
; 0000 008C       else{
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 008D                   sprintf(txt,"LED light  %2d                 ",PotentiometerInput);
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 008E             }
;PCODE: $00000181 VOL: 0
; 0000 008F       lcd_gotoxy(0,0);
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 0090       lcd_puts(txt);
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 0091       return LAYER_OF_LCD;
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 0092 }
;PCODE: $0000018B VOL: 0
;int COUNT_Pressed (int pressedUP){
; 0000 0093 int COUNT_Pressed (int pressedUP){
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 0094       if(PINA.1){
;PCODE: $0000018E VOL: 0
;	pressedUP -> Y+0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 0095             pressedUP++;
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 0096       }
; 0000 0097       else if (PINA.2){
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 0098             pressedUP--;
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 0099       }
; 0000 009A 
; 0000 009B       return abs(pressedUP);
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 009C }
;PCODE: $000001A3 VOL: 0
;int COUNT_Pressed_TEMP (int TEMP_LEVEL){
; 0000 009D int COUNT_Pressed_TEMP (int TEMP_LEVEL){
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 009E       if(PINA.1){
;PCODE: $000001A6 VOL: 0
;	TEMP_LEVEL -> Y+0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 009F             TEMP_LEVEL++;
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 00A0       }
; 0000 00A1       else if (PINA.2){
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 00A2             TEMP_LEVEL--;
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 00A3       }
; 0000 00A4       sprintf(txt,"OFF     %2d \n        ___       ",TEMP_LEVEL);
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0000 00A5       lcd_gotoxy(0,0);
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 00A6       lcd_puts(txt);
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 00A7 
; 0000 00A8       return abs(TEMP_LEVEL);
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 00A9 }
;PCODE: $000001CD VOL: 0
;int LCD_MENU(int pressedUP,int LAYER_OF_LCD){
; 0000 00AA int LCD_MENU(int pressedUP,int LAYER_OF_LCD){
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 00AB       if(pressedUP % 4 == 0){
;PCODE: $000001D0 VOL: 0
;	pressedUP -> Y+2
;	LAYER_OF_LCD -> Y+0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0000 00AC             sprintf(txt,"LED FAN TEMP pass \n___          ");
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 00AD             lcd_gotoxy(0,0);
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 00AE             lcd_puts(txt);
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
; 0000 00AF             if(PINA.3){LAYER_OF_LCD = 1;}
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 00B0             }
;PCODE: $000001EA VOL: 0
; 0000 00B1       else if(pressedUP % 4 == 3){
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 00B2             sprintf(txt,"LED FAN TEMP pass \n    ___      ");
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 00B3             lcd_gotoxy(0,0);
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 00B4             lcd_puts(txt);
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 00B5             if(PINA.3){LAYER_OF_LCD = 10;}
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 00B6       }
;PCODE: $00000206 VOL: 0
; 0000 00B7       else if(pressedUP % 4 == 2){
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
; 0000 00B8             sprintf(txt,"LED FAN TEMP pass \n        ___  ");
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 00B9             lcd_gotoxy(0,0);
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0000 00BA             lcd_puts(txt);
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 00BB             if(PINA.3){LAYER_OF_LCD = 20;}
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 00BC       }
;PCODE: $00000222 VOL: 0
; 0000 00BD       else if(pressedUP % 4 == 1){
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 00BE             sprintf(txt,"LED FAN TEMP pass \n           ___");
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 00BF             lcd_gotoxy(0,0);
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0000 00C0             lcd_puts(txt);
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 00C1             if(PINA.3){LAYER_OF_LCD = 30;}
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 00C2       return LAYER_OF_LCD;
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0000 00C3 }
; 0000 00C4 int LCD_CHANGE_TEMP(int LAYER_OF_LCD,int pressedUP,int TEMP_LEVEL,int tempreture){
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;	pressedUP -> Y+5
;	LAYER_OF_LCD -> Y+3
;	TEMP_LEVEL -> R16,R17
;	tempreture -> R18,R19
; 0000 00C5       if(pressedUP % 2 == 0){
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0000 00C6             sprintf(txt,"OFF     %2d  %2d \n___             ",TEMP_LEVEL,tempreture);
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
; 0000 00C7             lcd_gotoxy(0,0);
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
; 0000 00C8             lcd_puts(txt);
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 00C9             if(PINA.3){TEMP_LEVEL = 0;}
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 00CA             }
;PCODE: $00000267 VOL: 0
; 0000 00CB       else if(pressedUP % 2 == 1){
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
; 0000 00CC             sprintf(txt,"OFF     %2d  %2d \n        ___    ",TEMP_LEVEL,tempreture);
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 00CD             lcd_gotoxy(0,0);
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 00CE             lcd_puts(txt);
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
; 0000 00CF             if(PINA.3){
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0000 00D0                   while(PINA.4 == 0){
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
; 0000 00D1                         TEMP_LEVEL = COUNT_Pressed_TEMP(TEMP_LEVEL);
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 00D2                   }
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
; 0000 00D3             }
; 0000 00D4             if(PINA.4){
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0000 00D5             LAYER_OF_LCD = 0;
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 00D6       }
; 0000 00D7       return LAYER_OF_LCD;
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
; 0000 00D8       }
; 0000 00D9 }
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;int LCD_FAN_SPEED(int LAYER_OF_LCD,int pressedUP , int FAN_LEVEL){
; 0000 00DA int LCD_FAN_SPEED(int LAYER_OF_LCD,int pressedUP , int FAN_LEVEL){
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
; 0000 00DB       if(pressedUP % 3 == 0){
;PCODE: $000002A3 VOL: 0
;	LAYER_OF_LCD -> Y+4
;	pressedUP -> Y+2
;	FAN_LEVEL -> Y+0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
; 0000 00DC             sprintf(txt,"SLOW  MED  FAST\n___           ");
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
; 0000 00DD             lcd_gotoxy(0,0);
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 00DE             lcd_puts(txt);
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
; 0000 00DF             if(PINA.3){FAN_LEVEL = 100;OCR0 = FAN_LEVEL;}
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 00E0             }
;PCODE: $000002BF VOL: 0
; 0000 00E1       else if(pressedUP % 3 == 2){
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 00E2             sprintf(txt,"SLOW  MED  FAST\n     ___      ");
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
; 0000 00E3             lcd_gotoxy(0,0);
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
; 0000 00E4             lcd_puts(txt);
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
; 0000 00E5             if(PINA.3){FAN_LEVEL = 177;OCR0 = FAN_LEVEL;}
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
; 0000 00E6       }
;PCODE: $000002DD VOL: 0
; 0000 00E7       else if(pressedUP % 3 == 1){
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
; 0000 00E8             sprintf(txt,"SLOW  MED  FAST\n          ___ ");
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
; 0000 00E9             lcd_gotoxy(0,0);
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
; 0000 00EA             lcd_puts(txt);
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0000 00EB             if(PINA.3){FAN_LEVEL = 250;OCR0 = FAN_LEVEL;}
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
; 0000 00EC       }
;PCODE: $000002FB VOL: 0
; 0000 00ED       if(PINA.4){
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
; 0000 00EE             LAYER_OF_LCD = 0;
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
; 0000 00EF       }
; 0000 00F0       return LAYER_OF_LCD;
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
; 0000 00F1 }
;PCODE: $00000308 VOL: 0
;void change_pass(char password[]){
; 0000 00F2 void change_pass(char password[]){
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
; 0000 00F3       int counter = 0;
; 0000 00F4       int x;
; 0000 00F5       sprintf(txt,"new pass:");
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;	password -> Y+4
;	counter -> R16,R17
;	x -> R18,R19
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
; 0000 00F6       lcd_gotoxy(0,0);
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
; 0000 00F7       lcd_puts(txt);
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
; 0000 00F8       password = "ffffffffffffff";
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
; 0000 00F9       while(PORTA.4 == 0 && counter < 10){
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
; 0000 00FA             PORTC=0x0E;
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
; 0000 00FB             if(PINC!=0x0E){
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
; 0000 00FC                   x = keypad();
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
; 0000 00FD                   counter +=1;
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
; 0000 00FE                   password[counter] = x;
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
; 0000 00FF                   sprintf(txt,"new pass: %2c%2c%2c%2c%2c%2c%2c%2c%2c%2c%2c%2c%2c%2c",password[0],password[1],password[2] ...
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
; 0000 0100                   lcd_gotoxy(0,0);
;PCODE: $0000037B VOL: 0
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
; 0000 0101                   lcd_puts(txt);
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
; 0000 0102 
; 0000 0103             }
; 0000 0104       }
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
; 0000 0105 }
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;void main(void)
; 0000 0107 {
;PCODE: $00000388 VOL: 0
; 0000 0108 
; 0000 0109 // Declare your local variables here
; 0000 010A char password[pass_lenght];
; 0000 010B read_array_eeprom(password[]);
;PCODE: $00000389 VOL: 0
;	password -> Y+0
; 0000 010C int PotentiometerInput ;
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
; 0000 010D int LedOn;
; 0000 010E int pressedUP =0;
; 0000 010F int LAYER_OF_LCD = 0;
; 0000 0110 int tempreture;
; 0000 0111 int TEMP_LEVEL = 30;
; 0000 0112 int FAN_LEVEL = 0;
; 0000 0113 OCR0 = FAN_LEVEL;
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;	password -> Y+7
;	PotentiometerInput -> R16,R17
;	LedOn -> R18,R19
;	pressedUP -> R20,R21
;	LAYER_OF_LCD -> Y+6
;	tempreture -> Y+4
;	TEMP_LEVEL -> Y+2
;	FAN_LEVEL -> Y+0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
; 0000 0114 unsigned char x;
; 0000 0115 int i = 9;
; 0000 0116 for (; i < 14 ; i ++ ){
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;	password -> Y+9
;	PotentiometerInput -> R16,R17
;	LedOn -> R18,R19
;	pressedUP -> R20,R21
;	LAYER_OF_LCD -> Y+8
;	tempreture -> Y+6
;	TEMP_LEVEL -> Y+4
;	FAN_LEVEL -> Y+2
;	x -> Y+2
;	i -> Y+0
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
; 0000 0117       if(password[i] != 'f'){
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
; 0000 0118             password = "1234ffffffffff";
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
; 0000 0119             int size_pass = 4
; 0000 011A             write_array_eeprom(password,size_pass);
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
;	password -> Y+10
;	LAYER_OF_LCD -> Y+9
;	tempreture -> Y+7
;	TEMP_LEVEL -> Y+5
;	FAN_LEVEL -> Y+3
;	x -> Y+3
;	i -> Y+1
;	size_pass -> Y+0
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
; 0000 011B       }
;PCODE: $000003C4 VOL: 0
; 0000 011C }
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
; 0000 011D int size_pass = size_of_pass(password[]);
; 0000 011E // Input/Output Ports initialization
; 0000 011F // Port A initialization
; 0000 0120 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0121 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $000003CC VOL: 0
;	password -> Y+10
;	PotentiometerInput -> R16,R17
;	LedOn -> R18,R19
;	pressedUP -> R20,R21
;	LAYER_OF_LCD -> Y+9
;	tempreture -> Y+7
;	TEMP_LEVEL -> Y+5
;	FAN_LEVEL -> Y+3
;	x -> Y+3
;	i -> Y+1
;	size_pass -> Y+0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
; 0000 0122 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0123 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
; 0000 0124 
; 0000 0125 // Port B initialization
; 0000 0126 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=In Bit1=In Bit0=In
; 0000 0127 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (1<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
; 0000 0128 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=0 Bit2=T Bit1=T Bit0=T
; 0000 0129 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
; 0000 012A 
; 0000 012B // Port C initialization
; 0000 012C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 012D DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $000003DC VOL: 0
;PCODE: $000003DD VOL: 0
; 0000 012E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 012F PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (1<<PORTC3) | (1<<PORTC2) | (1<<PORTC1) | (0<<PORTC0);
;PCODE: $000003DE VOL: 0
;PCODE: $000003DF VOL: 0
; 0000 0130 
; 0000 0131 // Port D initialization
; 0000 0132 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0133 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
; 0000 0134 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0135 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
; 0000 0136 
; 0000 0137 // Timer/Counter 0 initialization
; 0000 0138 // Clock source: System Clock
; 0000 0139 // Clock value: 31.250 kHz
; 0000 013A // Mode: Normal top=0xFF
; 0000 013B // OC0 output: Disconnected
; 0000 013C // Timer Period: 8 ms
; 0000 013D TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
; 0000 013E TCNT0=0x00;
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
; 0000 013F OCR0=0x00;
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
; 0000 0140 
; 0000 0141 // Timer/Counter 1 initialization
; 0000 0142 // Clock source: System Clock
; 0000 0143 // Clock value: Timer1 Stopped
; 0000 0144 // Mode: Normal top=0xFFFF
; 0000 0145 // OC1A output: Disconnected
; 0000 0146 // OC1B output: Disconnected
; 0000 0147 // Noise Canceler: Off
; 0000 0148 // Input Capture on Falling Edge
; 0000 0149 // Timer1 Overflow Interrupt: Off
; 0000 014A // Input Capture Interrupt: Off
; 0000 014B // Compare A Match Interrupt: Off
; 0000 014C // Compare B Match Interrupt: Off
; 0000 014D TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
; 0000 014E TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $000003EC VOL: 0
;PCODE: $000003ED VOL: 0
; 0000 014F TCNT1H=0x00;
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
; 0000 0150 TCNT1L=0x00;
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
; 0000 0151 ICR1H=0x00;
;PCODE: $000003F2 VOL: 0
;PCODE: $000003F3 VOL: 0
; 0000 0152 ICR1L=0x00;
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
; 0000 0153 OCR1AH=0x00;
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
; 0000 0154 OCR1AL=0x00;
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
; 0000 0155 OCR1BH=0x00;
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
; 0000 0156 OCR1BL=0x00;
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
; 0000 0157 
; 0000 0158 // Timer/Counter 2 initialization
; 0000 0159 // Clock source: System Clock
; 0000 015A // Clock value: Timer2 Stopped
; 0000 015B // Mode: Normal top=0xFF
; 0000 015C // OC2 output: Disconnected
; 0000 015D ASSR=0<<AS2;
;PCODE: $000003FE VOL: 0
;PCODE: $000003FF VOL: 0
; 0000 015E TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
; 0000 015F TCNT2=0x00;
;PCODE: $00000402 VOL: 0
;PCODE: $00000403 VOL: 0
; 0000 0160 OCR2=0x00;
;PCODE: $00000404 VOL: 0
;PCODE: $00000405 VOL: 0
; 0000 0161 
; 0000 0162 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0163 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
; 0000 0164 
; 0000 0165 // External Interrupt(s) initialization
; 0000 0166 // INT0: Off
; 0000 0167 // INT1: Off
; 0000 0168 // INT2: Off
; 0000 0169 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
; 0000 016A MCUCSR=(0<<ISC2);
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
; 0000 016B 
; 0000 016C // USART initialization
; 0000 016D // USART disabled
; 0000 016E UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
; 0000 016F 
; 0000 0170 // Analog Comparator initialization
; 0000 0171 // Analog Comparator: Off
; 0000 0172 // The Analog Comparator's positive input is
; 0000 0173 // connected to the AIN0 pin
; 0000 0174 // The Analog Comparator's negative input is
; 0000 0175 // connected to the AIN1 pin
; 0000 0176 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
; 0000 0177 
; 0000 0178 // ADC initialization
; 0000 0179 // ADC Clock frequency: 1000.000 kHz
; 0000 017A // ADC Voltage Reference: AREF pin
; 0000 017B // ADC Auto Trigger Source: ADC Stopped
; 0000 017C ADMUX=ADC_VREF_TYPE;
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
; 0000 017D ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
; 0000 017E SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
; 0000 017F 
; 0000 0180 // SPI initialization
; 0000 0181 // SPI disabled
; 0000 0182 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
; 0000 0183 
; 0000 0184 // TWI initialization
; 0000 0185 // TWI disabled
; 0000 0186 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
; 0000 0187 
; 0000 0188 // Alphanumeric LCD initialization
; 0000 0189 // Connections are specified in the
; 0000 018A // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 018B // RS - PORTB Bit 0
; 0000 018C // RD - PORTB Bit 1
; 0000 018D // EN - PORTB Bit 2
; 0000 018E // D4 - PORTB Bit 4
; 0000 018F // D5 - PORTB Bit 5
; 0000 0190 // D6 - PORTB Bit 6
; 0000 0191 // D7 - PORTB Bit 7
; 0000 0192 // Characters/line: 20
; 0000 0193 lcd_init(20);
;PCODE: $0000041A VOL: 0
;PCODE: $0000041B VOL: 0
; 0000 0194 
; 0000 0195 
; 0000 0196 
; 0000 0197 // Global enable interrupts
; 0000 0198 #asm("sei")
;PCODE: $0000041C VOL: 0
	sei
;PCODE: $0000041D VOL: 0
; 0000 0199 while(1){
;PCODE: $0000041E VOL: 0
; 0000 019A       PORTC=0x0E;
;PCODE: $0000041F VOL: 0
;PCODE: $00000420 VOL: 0
; 0000 019B       if(PINC!=0x0E){
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
;PCODE: $00000423 VOL: 0
; 0000 019C             x = keypad();
;PCODE: $00000424 VOL: 0
;PCODE: $00000425 VOL: 0
; 0000 019D             }
; 0000 019E       if(strncmp(x,password,size_pass)==0){
;PCODE: $00000426 VOL: 0
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
; 0000 019F             break;
;PCODE: $00000431 VOL: 0
; 0000 01A0       }
; 0000 01A1       }
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
;PCODE: $00000434 VOL: 0
; 0000 01A2 while (1)
;PCODE: $00000435 VOL: 0
; 0000 01A3       {
; 0000 01A4             LedOn = PINC.0;
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
; 0000 01A5             if(LedOn){
;PCODE: $0000043A VOL: 0
;PCODE: $0000043B VOL: 0
; 0000 01A6                   PotentiometerInput = read_adc(5);
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
; 0000 01A7                   OCR2 = PotentiometerInput;
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
; 0000 01A8                   PwmLed_init();
;PCODE: $00000441 VOL: 0
; 0000 01A9             }
; 0000 01AA             else{
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
; 0000 01AB                   PORTD.7 = LedOn;
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
; 0000 01AC                   PwmLed_init_rev();
;PCODE: $0000044E VOL: 0
; 0000 01AD             }
;PCODE: $0000044F VOL: 0
; 0000 01AE             tempreture = read_adc(0);
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
; 0000 01AF             tempreture = (int)((float)tempreture/1024*5*100);
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
; 0000 01B0             if(tempreture > TEMP_LEVEL){
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
; 0000 01B1                   PwmFAN_init();
;PCODE: $00000462 VOL: 0
; 0000 01B2             }
; 0000 01B3             else{
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
; 0000 01B4                   PORTB.3 = 0;
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
; 0000 01B5                   PwmFAN_init_rev();
;PCODE: $00000467 VOL: 0
; 0000 01B6             }
;PCODE: $00000468 VOL: 0
; 0000 01B7             pressedUP = COUNT_Pressed(pressedUP);
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
; 0000 01B8             if (LAYER_OF_LCD == 0){
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
; 0000 01B9                   LAYER_OF_LCD = LCD_MENU(pressedUP,LAYER_OF_LCD);
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
;PCODE: $00000472 VOL: 0
; 0000 01BA             }
; 0000 01BB             else if (LAYER_OF_LCD == 1){
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
;PCODE: $00000477 VOL: 0
; 0000 01BC                   LAYER_OF_LCD = LCD_LED_LEVEL(LedOn,LAYER_OF_LCD,PotentiometerInput);
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
; 0000 01BD             }
; 0000 01BE             else if (LAYER_OF_LCD == 20){
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
; 0000 01BF                   LAYER_OF_LCD = LCD_CHANGE_TEMP(LAYER_OF_LCD,pressedUP,TEMP_LEVEL,tempreture);
;PCODE: $00000483 VOL: 0
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
; 0000 01C0             }
;PCODE: $0000048A VOL: 0
; 0000 01C1             else if (LAYER_OF_LCD == 10){
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
;PCODE: $0000048D VOL: 0
;PCODE: $0000048E VOL: 0
;PCODE: $0000048F VOL: 0
; 0000 01C2                   LAYER_OF_LCD = LCD_FAN_SPEED(LAYER_OF_LCD,pressedUP,FAN_LEVEL);
;PCODE: $00000490 VOL: 0
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
;PCODE: $00000495 VOL: 0
; 0000 01C3             }
; 0000 01C4             else if (LAYER_OF_LCD == 30){
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
; 0000 01C5                   LAYER_OF_LCD = CHANGE_PASS(password[]);
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
; 0000 01C6             }
;PCODE: $0000049E VOL: 0
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
; 0000 01C7 
; 0000 01C8       }
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
;PCODE: $000004A8 VOL: 0
; 0000 01C9 }
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
